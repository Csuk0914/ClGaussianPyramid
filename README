ClGaussianPyramid
=================
Experiments on Gaussian Pyramid implemented using OpenCL. 

This project implements ideas and algorithms detailed in the following 
publications:
* J.L. Crowley, "A Representation for Visual Information", CMU-RI-TR-82-07, 
  Robotics Institute, Carnegie Mellon University, November, 1981. 
  (US 8-1/2 by 11)
* J. L. Crowley, O. Riff, "Fast Computation of Characteristic Scale using a 
  Half Octave Pyramid", Scale Space 03, 4th International Conference on 
  Scale-Space theories in Computer Vision, 10-12 June 2003, Isle of Skye, 
  Scotland, UK
* B.Schiele and J. L. Crowley, "Recognition without Correspondence using 
  Multidimensional Receptive Field Histograms", International Journal of 
  Computer Vision, 36(1), pp 31-50, Jan. 2000
* J. L. Crowley and R. M. Stern, "Fast Computation of the Difference of 
  Low-Pass Transform", IEEE Transactions on PAMI, PAMI 6 (2), pp 234-239, March 
  1984.
* J. L. Crowley and A. C. Parker, "A Representation for Shape Based on Peaks 
  and Ridges in the Difference of Low Pass Transform", IEEE Transactions on 
  PAMI, PAMI 6 (2), pp 156-170, March 1984.


Requisites
----------
* OpenCL <http://www.khronos.org/opencl/>
* CMake <http://www.cmake.org/>
* ImageMagick <http://www.imagemagick.org/>


Build instructions
------------------
The project uses the CMake build system, please refer to the cmake website
(<http://www.cmake.org/>) for documentation and tutorials.

By default, the projet only build the clgp library, a few more options and
modules are optionaly available:
* BUILD_JAVAIMPLEMENTATION: Build the JavaImplementation jar
 * Requires cmake >= 2.8.5 and Java
* BUILD_GSPMODULE: Build the GSP module
 * Requires OpenCV >= 2.0 and the GSP (<https://github.com/twitwi/GSP/>)
* BUILD_TESTS: Build the tests

A few tips for the lazy:
If some of your headers or libraries are in an uncommon place, you can use
the CMAKE_INCLUDE_PATH and CMAKE_LIBRARY_PATH environment variables, for example
if you are using the headers from NVidia's SDK :
$ export CMAKE_INCLUDE_PATH=[...]/NVIDIA_GPU_Computing_SDK/OpenCL/common/inc
or
$ setenv CMAKE_INCLUDE_PATH=[...]/NVIDIA_GPU_Computing_SDK/OpenCL/common/inc
(you can specify multiples paths with the semicolumn (:) separator)

